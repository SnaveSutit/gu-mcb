
function convert {
	data merge storage gu:temp {0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,a:0,b:0,c:0,d:0,e:0,f:0}
	$data modify storage gu:main in set value $(UUID)

	execute store result score 0= gu.main store result score 1= gu.main run data get storage gu:main in[0]
	execute store result storage gu:temp 0 int 1 run scoreboard players operation 0= gu.main %= 256 num
	execute store result score 2= gu.main run scoreboard players operation 1= gu.main /= 256 num
	execute store result storage gu:temp 1 int 1 run scoreboard players operation 1= gu.main %= 256 num
	execute store result score 3= gu.main run scoreboard players operation 2= gu.main /= 256 num
	execute store result storage gu:temp 2 int 1 run scoreboard players operation 2= gu.main %= 256 num
	execute store result storage gu:temp 3 int 1 run scoreboard players operation 3= gu.main /= 256 num

	execute store result score 0= gu.main store result score 1= gu.main run data get storage gu:main in[1]
	execute store result storage gu:temp 4 int 1 run scoreboard players operation 0= gu.main %= 256 num
	execute store result score 2= gu.main run scoreboard players operation 1= gu.main /= 256 num
	execute store result storage gu:temp 5 int 1 run scoreboard players operation 1= gu.main %= 256 num
	execute store result score 3= gu.main run scoreboard players operation 2= gu.main /= 256 num
	execute store result storage gu:temp 6 int 1 run scoreboard players operation 2= gu.main %= 256 num
	execute store result storage gu:temp 7 int 1 run scoreboard players operation 3= gu.main /= 256 num

	execute store result score 0= gu.main store result score 1= gu.main run data get storage gu:main in[2]
	execute store result storage gu:temp 8 int 1 run scoreboard players operation 0= gu.main %= 256 num
	execute store result score 2= gu.main run scoreboard players operation 1= gu.main /= 256 num
	execute store result storage gu:temp 9 int 1 run scoreboard players operation 1= gu.main %= 256 num
	execute store result score 3= gu.main run scoreboard players operation 2= gu.main /= 256 num
	execute store result storage gu:temp a int 1 run scoreboard players operation 2= gu.main %= 256 num
	execute store result storage gu:temp b int 1 run scoreboard players operation 3= gu.main /= 256 num

	execute store result score 0= gu.main store result score 1= gu.main run data get storage gu:main in[3]
	execute store result storage gu:temp c int 1 run scoreboard players operation 0= gu.main %= 256 num
	execute store result score 2= gu.main run scoreboard players operation 1= gu.main /= 256 num
	execute store result storage gu:temp d int 1 run scoreboard players operation 1= gu.main %= 256 num
	execute store result score 3= gu.main run scoreboard players operation 2= gu.main /= 256 num
	execute store result storage gu:temp e int 1 run scoreboard players operation 2= gu.main %= 256 num
	execute store result storage gu:temp f int 1 run scoreboard players operation 3= gu.main /= 256 num

	function gu:zzz/get_hexes with storage gu:temp
	function gu:zzz/concat_uuid with storage gu:temp
}

function generate {
	data merge storage gu:temp {0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,a:0,b:0,c:0,d:0,e:0,f:0}
	execute unless score @s gu.uuid.0 matches -2147483648.. run function gu:zzz/store_uuid

	execute store result score 0= gu.main run scoreboard players operation 1= gu.main = @s gu.uuid.0
	execute store result storage gu:temp 0 int 1 run scoreboard players operation 0= gu.main %= 256 num
	execute store result score 2= gu.main run scoreboard players operation 1= gu.main /= 256 num
	execute store result storage gu:temp 1 int 1 run scoreboard players operation 1= gu.main %= 256 num
	execute store result score 3= gu.main run scoreboard players operation 2= gu.main /= 256 num
	execute store result storage gu:temp 2 int 1 run scoreboard players operation 2= gu.main %= 256 num
	execute store result storage gu:temp 3 int 1 run scoreboard players operation 3= gu.main /= 256 num

	execute store result score 0= gu.main run scoreboard players operation 1= gu.main = @s gu.uuid.1
	execute store result storage gu:temp 4 int 1 run scoreboard players operation 0= gu.main %= 256 num
	execute store result score 2= gu.main run scoreboard players operation 1= gu.main /= 256 num
	execute store result storage gu:temp 5 int 1 run scoreboard players operation 1= gu.main %= 256 num
	execute store result score 3= gu.main run scoreboard players operation 2= gu.main /= 256 num
	execute store result storage gu:temp 6 int 1 run scoreboard players operation 2= gu.main %= 256 num
	execute store result storage gu:temp 7 int 1 run scoreboard players operation 3= gu.main /= 256 num

	execute store result score 0= gu.main run scoreboard players operation 1= gu.main = @s gu.uuid.2
	execute store result storage gu:temp 8 int 1 run scoreboard players operation 0= gu.main %= 256 num
	execute store result score 2= gu.main run scoreboard players operation 1= gu.main /= 256 num
	execute store result storage gu:temp 9 int 1 run scoreboard players operation 1= gu.main %= 256 num
	execute store result score 3= gu.main run scoreboard players operation 2= gu.main /= 256 num
	execute store result storage gu:temp a int 1 run scoreboard players operation 2= gu.main %= 256 num
	execute store result storage gu:temp b int 1 run scoreboard players operation 3= gu.main /= 256 num

	execute store result score 0= gu.main run scoreboard players operation 1= gu.main = @s gu.uuid.3
	execute store result storage gu:temp c int 1 run scoreboard players operation 0= gu.main %= 256 num
	execute store result score 2= gu.main run scoreboard players operation 1= gu.main /= 256 num
	execute store result storage gu:temp d int 1 run scoreboard players operation 1= gu.main %= 256 num
	execute store result score 3= gu.main run scoreboard players operation 2= gu.main /= 256 num
	execute store result storage gu:temp e int 1 run scoreboard players operation 2= gu.main %= 256 num
	execute store result storage gu:temp f int 1 run scoreboard players operation 3= gu.main /= 256 num

	function gu:zzz/get_hexes with storage gu:temp
	function gu:zzz/concat_uuid with storage gu:temp
}

dir zzz {
	function concat_uuid {
		$data modify storage gu:main out set value "$(3)$(2)$(1)$(0)-$(7)$(6)-$(5)$(4)-$(b)$(a)-$(9)$(8)$(f)$(e)$(d)$(c)"
	}

	function get_hexes {
		REPEAT (0, 15) as i {
			$data modify storage aj:uuid temp.<%i.toString(16)%> set from storage aj:uuid main.hex_chars[$(<%i.toString(16)%>)]
		}
	}

	function load minecraft:load {
		scoreboard objectives add gu.main dummy
		REPEAT (0, 3) as i {
			scoreboard objectives add gu.uuid.<%i%> dummy
		}
		scoreboard objectives add num dummy
		scoreboard players set 256 num 256
		data modify storage gu:main hex_chars set value \
			<%JSON.stringify([...Array(0x100).keys()].map(v => {const x = v.toString(16); return x.length > 1 ? x : '0' + x}))%>
	}

	function store_uuid {
		data modify storage gu:main in set from entity @s UUID
		REPEAT (0, 3) as i {
			execute store result score @s gu.uuid.<%i%> run data get storage gu:main in[<%i%>]
		}
	}
}
